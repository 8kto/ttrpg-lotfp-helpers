name: Automated Release with Archive

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag Name for Release (leave empty for last tag)'
        required: false
        default: ''

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Determine tags
        id: last_tags
        run: |
          TAGS=($(git for-each-ref --sort='-committerdate' --format "%(refname:short)" refs/tags))
          if [ -z "${{ github.event.inputs.tag }}" ]; then
            CURRENT_TAG=${{ env.TAGS[0] }}
            PREVIOUS_TAG=${{ env.TAGS[1] }}
          else
            CURRENT_TAG=${{ github.event.inputs.tag }}
            PREVIOUS_TAG=$(git describe --tags --abbrev=0 $CURRENT_TAG^ 2>/dev/null || echo "")
          fi
          echo "CURRENT_TAG=${{ env.CURRENT_TAG }}" >> $GITHUB_ENV
          echo "PREVIOUS_TAG=${{ env.PREVIOUS_TAG }}" >> $GITHUB_ENV

      - name: Create archive
        run: |
          TAG_NAME=${{ env.CURRENT_TAG }}
          zip -r princess-helpers-${{ env.CURRENT_TAG }}.zip .

      - name: Generate commit list
        id: generate_commits
        run: |
          PREVIOUS_TAG=${{ env.PREVIOUS_TAG }}
          if [ -z "$PREVIOUS_TAG" ]; then
            # Fallback in case there's no previous tag
            COMMIT_LIST=$(git log --pretty=format:"- %H %s")
          else
            COMMIT_LIST=$(git log $PREVIOUS_TAG..${{ env.CURRENT_TAG }} --pretty=format:"- %H %s")
          fi
          echo "COMMIT_LIST<<EOF" >> $GITHUB_ENV
          echo "$COMMIT_LIST" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.CURRENT_TAG }}
          name: ${{ env.CURRENT_TAG }}
          body: |
            Changes:
            ${{ env.COMMIT_LIST }}
          files: princess-helpers-${{ env.CURRENT_TAG }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
